{"name": "Info_2获取个人信息正确", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"dict\") to str", "trace": "self = <testcase.test_excel_case.TestExcel object at 0x10ba76908>\ncase = {'cookies': '', 'headers': '{\"Authorization\": \"JWT ${token}$\"}', 'status_code': 200.0, '前置条件': 'login_4', ...}\n\n    @pytest.mark.parametrize(\"case\",run_list)\n    # 2、修改方法参数\n    def test_run(self,case):\n        # 3、重构函数内容\n        #data_key = ExcelConfig.DataConfig\n        # run_list第1个用例，用例，key获取values\n        url = ConfigYaml().get_conf_url()+case[data_key.url]\n        print(url)\n        case_id = case[data_key.case_id]\n        case_model = case[data_key.case_model]\n        case_name = case[data_key.case_name]\n        pre_exec = case[data_key.pre_exec]\n        method = case[data_key.method]\n        params_type = case[data_key.params_type]\n        params = case[data_key.params]\n        expect_result = case[data_key.expect_result]\n        headers = case[data_key.headers]\n        cookies =case[data_key.cookies]\n        code = case[data_key.code]\n        db_verify = case[data_key.db_verify]\n    \n    \n    \n        # 1、验证前置条件\n        if pre_exec:\n            pass\n        # 2、找到执行用例\n            # 前置测试用例\n            pre_case = data_init.get_case_pre(pre_exec)\n            print(\"前置条件信息为：%s\"%pre_case)\n            pre_res = self.run_pre(pre_case)\n            headers,cookies = self.get_correlation(headers,cookies,pre_res)\n    \n        header = Base.json_parse(headers)\n        cookie = Base.json_parse(cookies)\n        res = self.run_api(url, method, params, header,cookie)\n        print(\"测试用例执行：%s\" % res)\n    \n        #allure\n        #sheet名称  feature 一级标签\n        allure.dynamic.feature(sheet_name)\n        #模块   story 二级标签\n        allure.dynamic.story(case_model)\n        #用例ID+接口名称  title\n        allure.dynamic.title(case_id+case_name)\n        #请求URL  请求类型 期望结果 实际结果描述\n>       allure.dynamic.description(url+method+expect_result+res)\nE       TypeError: can only concatenate str (not \"dict\") to str\n\ntest_excel_case.py:129: TypeError"}, "attachments": [{"name": "log", "source": "4d5223e1-c3aa-4bf8-9c3c-7f25b1226689-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'用例ID': 'Info_2', '模块': '个人信息', '接口名称': '获取个人信息正确', '请求URL': '/user/', '前置条件': 'login_4', '请求类型': 'get', '请求参数类型': '', '请求参数': '', '预期结果': \"id': 1, 'username': 'python', 'mobile': '17701397029', 'email': '952673638@qq.com'\", '实际结果': '', '备注': '', '是否运行': 'y', 'headers': '{\"Authorization\": \"JWT ${token}$\"}', 'cookies': '', 'status_code': 200.0, '数据库验证': \"select id,username,mobile,email from tb_users where username='python'\"}"}], "start": 1567740179777, "stop": 1567740180220, "uuid": "6156618e-fdbc-4d8e-a16f-2c81daf57c6c", "historyId": "3fc60a1e35323350a94bb4558e32a443", "fullName": "testcase.test_excel_case.TestExcel#test_run[case0]", "labels": [{"name": "feature", "value": "美多商城接口测试"}, {"name": "story", "value": "个人信息"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_excel_case"}, {"name": "subSuite", "value": "TestExcel"}, {"name": "host", "value": "wuyanhongdeMacBook-Pro.local"}, {"name": "thread", "value": "21847-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_excel_case"}]}